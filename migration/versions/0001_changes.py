"""changes

Revision ID: 0001
Revises: 
Create Date: 2024-08-30 20:49:31.020336

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '0001'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('ai_assistants',
    sa.Column('assistant_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('assistant', sa.String(length=255), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('assistant_prompt', sa.Text(), nullable=False),
    sa.Column('user_prompt', sa.Text(), nullable=False),
    sa.Column('user_prompt_for_chunks', sa.Text(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
    sa.PrimaryKeyConstraint('assistant_id')
    )
    op.create_table('currencies',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('code', sa.CHAR(length=3), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('formats',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('format_name', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('models',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('version', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('sources',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('source_name', sa.String(length=255), nullable=False),
    sa.Column('domain', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('summary_texts',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('summary_text', sa.Text(), nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=True),
    sa.Column('service_source', sa.Text(), nullable=True),
    sa.Column('summary_date', sa.TIMESTAMP(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('transcribed_texts',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('text', sa.Text(), nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('service_source', sa.Text(), nullable=True),
    sa.Column('transcription_date', sa.TIMESTAMP(), nullable=True),
    sa.Column('transcription_time', sa.TIMESTAMP(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_transcribed_texts_id', 'transcribed_texts', ['id'], unique=False)
    op.create_index('ix_transcribed_texts_service_source', 'transcribed_texts', ['service_source'], unique=False)
    op.create_index('ix_transcribed_texts_user_id', 'transcribed_texts', ['user_id'], unique=False)
    op.create_table('files',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('source_id', sa.Integer(), nullable=False),
    sa.Column('link', sa.String(length=255), nullable=False),
    sa.Column('format_id', sa.Integer(), nullable=False),
    sa.Column('duration', postgresql.INTERVAL(), nullable=True),
    sa.Column('file_size', sa.BigInteger(), nullable=True),
    sa.Column('owner_id', sa.BigInteger(), nullable=False),
    sa.Column('upload_date', sa.TIMESTAMP(), nullable=False),
    sa.ForeignKeyConstraint(['format_id'], ['formats.id'], ),
    sa.ForeignKeyConstraint(['source_id'], ['sources.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('history',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('unique_id', sa.String(), nullable=False),
    sa.Column('summary_id', sa.Integer(), nullable=True),
    sa.Column('transcribe_id', sa.Integer(), nullable=True),
    sa.Column('service_source', sa.String(), nullable=False),
    sa.Column('date', sa.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['summary_id'], ['summary_texts.id'], ),
    sa.ForeignKeyConstraint(['transcribe_id'], ['transcribed_texts.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_history_date'), 'history', ['date'], unique=False)
    op.create_index(op.f('ix_history_id'), 'history', ['id'], unique=True)
    op.create_index(op.f('ix_history_unique_id'), 'history', ['unique_id'], unique=False)
    op.create_index(op.f('ix_history_user_id'), 'history', ['user_id'], unique=False)
    op.create_table('pricing',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('model_id', sa.Integer(), nullable=False),
    sa.Column('cost_per_token', sa.DECIMAL(precision=10, scale=4), nullable=False),
    sa.Column('currency_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['currency_id'], ['currencies.id'], ),
    sa.ForeignKeyConstraint(['model_id'], ['models.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('pricing')
    op.drop_index(op.f('ix_history_user_id'), table_name='history')
    op.drop_index(op.f('ix_history_unique_id'), table_name='history')
    op.drop_index(op.f('ix_history_id'), table_name='history')
    op.drop_index(op.f('ix_history_date'), table_name='history')
    op.drop_table('history')
    op.drop_table('files')
    op.drop_index('ix_transcribed_texts_user_id', table_name='transcribed_texts')
    op.drop_index('ix_transcribed_texts_service_source', table_name='transcribed_texts')
    op.drop_index('ix_transcribed_texts_id', table_name='transcribed_texts')
    op.drop_table('transcribed_texts')
    op.drop_table('summary_texts')
    op.drop_table('sources')
    op.drop_table('models')
    op.drop_table('formats')
    op.drop_table('currencies')
    op.drop_table('ai_assistants')
    # ### end Alembic commands ###
