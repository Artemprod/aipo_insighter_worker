#name: Insighter production deployment
#on:
#  push:
#    branches:
#      - main
#jobs:
#    lint:
#      runs-on: ubuntu-latest
#      steps:
#        - name: Get the code from repo
#          uses: actions/checkout@v4
#        - name: Install pipx
#          run: pip install pipx
#        - name: Install poetry
#          run: pipx install poetry
#        - name: Install dependencies
#          run: poetry install --no-root
#        - name: Run lint check
#          run: poetry run ruff check --fix
#    build:
#      runs-on: ubuntu-latest
#      steps:
#        - name: Checkout
#          uses: actions/checkout@v4
#        - name: Set up QEMU
#          uses: docker/setup-qemu-action@v3
#        - name: Set up Docker Buildx
#          uses: docker/setup-buildx-action@v3
#        - name: Login to Docker Hub
#          uses: docker/login-action@v3
#          with:
#            username: ${{secrets.DOCKERHUB_USERNAME}}
#            password: ${{secrets.DOCKERHUB_PASSWORD}}
#        - name: Docker meta
#          id: meta
#          uses: docker/metadata-action@v5
#          with:
#            # list of Docker images to use as base name for tags
#            images: |
#              artemprod/insighter_bot
#            # generate Docker tags based on the following events/attributes
#            tags: |
#              type=ref,event=branch
#              type=sha
#        - name: Build and push
#          uses: docker/build-push-action@v5
#          with:
#            cache-from: type=gha
#            cache-to: type=gha,mode=max
#            context: .
#            push: true
#            tags: ${{steps.meta.outputs.tags}}
#
# #pull и деплой на серевере
#    deploy_docker:
#      runs-on: ubuntu-latest
#      needs: build
#      steps:
#        - name: Checkout
#          uses: actions/checkout@v4
#          with:
#            sparse-checkout: |
#              deploy/prod/docker-compose.yml
#            sparse-checkout-cone-mode: false
#
#        - name: Set short sha
#          id: set_sha
#          run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
#        - name: Load SSH aws key
#          uses: webfactory/ssh-agent@v0.9.0
#          with:
#            ssh-private-key: ${{secrets.PRODUCTION_SERVER_PRIVAT_KEY}}
#        - name: Add SSH key to known_hosts
#          run: ssh-keyscan -H "${{vars.PRODUCTION_SERVER_HOST}}" >> ~/.ssh/known_hosts
#
#        - name: Deploy
#          run: |
#            echo "${{vars.PRODUCTION_ENV_FILE}}" >> ./deploy/prod/.env
#            docker context create prod_context --docker "host=ssh://${{vars.PRODUCTION_SERVER_SSH_ROUTE}}" || true
#            docker --context prod_context compose -f deploy/prod/docker-compose.yml down insighter_bot
#            docker --context prod_context system prune -af
#            export IMAGE_TAG=sha-${{ steps.set_sha.outputs.sha_short }}
#            docker --context prod_context compose -f deploy/prod/docker-compose.yml up -d --wait --wait-timeout 60
#
#
