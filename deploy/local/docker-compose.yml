services:

  postgres_db:
    container_name: postgres_container
    image: postgres
    env_file:
      - .env
    environment:
      POSTGRES_DB: "${DATABASE}"
      POSTGRES_PASSWORD: "${PASSWORD}"
      POSTGRES_USER: "${USER}"
      PGDATA: "/var/lib/postgresql/data/pgdata"
    ports:
      - "4321:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - local_test

  migration:
    image: docker.io/artemprod/insighter_worker:latest
    container_name: migration_alembic
    depends_on:
      - postgres_db
    env_file:
      - .env
    environment:
      DATABASE_URL: "${POSTGRES_URL}"
    command: ["/bin/sh", "/app/deploy/local/database_migration/migration.sh"]
    networks:
      - local_test


  redis_cache:
    image: redis
    env_file:
      - .env
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    restart: always
    volumes:
      - redis_cache:/DB/Redis/data/
    command: ["redis-server", "--port", "${REDIS_PORT}"]
    networks:
      - local_test

  nats:
    image: nats
    env_file:
      - .env
    ports:
      - "${NATS_PORT}:${NATS_PORT}"
      - "8222:8222"
    restart: always
    volumes:
      - nats:/DB/nats/data/
    networks:
      - local_test

  rabbitmq_server:
    image: rabbitmq:management
    ports:
      - "${RABITMQ_PORT}:${RABITMQ_PORT}"
      - "15672:15672"
    restart: always
    volumes:
      - rabbitmq_server:/Rabit/data/
    networks:
      - local_test

  insighter_worker:
    depends_on:
      - nats
      - rabbitmq_server
      - redis_cache
      - postgres_db
      - migration
    image: docker.io/artemprod/insighter_worker:latest
    volumes:
      - worker_volume:/var/lib/worker
    restart: always
    env_file:
      - .env
    command: ["poetry", "run", "python","/app/src/consumption/runer.py"]

    networks:
      - local_test

  insighter_api_server:
    depends_on:
      - nats
      - rabbitmq_server
      - redis_cache
      - postgres_db
      - migration

    image: docker.io/artemprod/insighter_worker:latest
    volumes:
      - worker_volume:/var/lib/worker
    restart: always
    env_file:
      - .env
    command: ["poetry", "run", "python","/app/src/api/app/server_app_run.py"]
    ports:
      - "9192:9192"
    networks:
      - local_test

volumes:
  redis_cache:
  postgres-data:
  nats:
  rabbitmq_server:
  worker_volume:

networks:
  local_test:
    external: true