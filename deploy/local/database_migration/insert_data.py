import asyncio
from datetime import datetime
from sqlalchemy import Table, MetaData
from sqlalchemy.ext.asyncio import AsyncSession, create_async_engine
from sqlalchemy.future import select
from sqlalchemy.orm import sessionmaker
from container import settings
from src.database.models.base_model import ModelBase  # Импортировать базовый класс
from src.database.models.consumption.asssistant import AIAssistant

# Импортировать модель

DATABASE_URL = "postgresql+asyncpg://postgres:postgres@localhost:2345/postgres"

data = [

    {
        'assistant': 'protocol',
        'name': 'Протокол встречи',
        'assistant_prompt': 'Внимательно изучите расшифровку текста, полученную из видеозаписи встречи, чтобы уловить все ключевые моменты и детали обсуждений. Необходимо найти и указать в протоколе максимальное количество полезных и важных фактов, названий, сумм, цен и так далее, которые явно озвучили собеседники. Всегда придерживайтесь единой структуры составляемого протокола: сначала раздел "Саммари": несколько предложений с основными выводами, о чем была встреча. Затем раздел "Основные моменты и договоренности" в котором тезисно, в виде маркированного списка, перечислите все важные темы и факты из обсуждения собеседников в записи встречи. В конце обязательно должен быть раздел "Фоллоу-ап", где в формате нумерованного списка необходимо перечислить все обсуждаемые на встрече и явно озвученные договоренности и дальнейшие действия собеседников. Не нужно ничего придумывать ',
        'user_prompt': 'Составьте краткое содержание встречи, подчеркивая основные темы и идеи, выделяя ключевые моменты разговора. Выделите самые важные тезисы, факты и цифры, озвученные в ходе встречи, такие как названия, имена, суммы, цифры, стоимость и другие релевантные данные. На основе полученной информации составьте протокол встречи, строго придерживаясь фактов, указанных в расшифровке текста. Включите в протокол все упомянутые детали, включая названия, имена, суммы и другие числовые данные. Подчеркните основные решения и договоренности, принятые на встрече, и укажите ответственных за их выполнение. После завершения составления протокола перечитайте его, чтобы удостовериться в полноте и точности представленной информации.',
        'user_prompt_for_chunks': 'Внимательно изучите расшифровку текста, полученную из видеозаписи деловой встречи, чтобы уловить все ключевые моменты и детали обсуждений. Важный момент - вы всегда анализируете одну запись встречи вне зависимости от количества частей текста в обработке',
        'created_at': datetime.utcnow()

    },

    {
        'assistant': 'summary',
        'name': 'Саммари записи',
        'assistant_prompt': 'Внимательно перечитайте расшифровку в виде текста загруженной аудио или видеозаписи с особым вниманием к деталям, озвученным в этой записи. Если текст содержит информацию, которая не является понятной или полезной, укажите это явно в кратком содержании.',
        'user_prompt': 'Another user prompt example',
        'user_prompt_for_chunks': 'Another chunked prompt example',
        'created_at': datetime.utcnow()
    },
    {
        'assistant': 'consultation',
        'name': 'Резюме консультации',
        'assistant_prompt': 'Вы специализируетесь на обработке расшифровок текста из аудио- и видеозаписей. Ваша задача — проанализировать запись консультации с экспертом, выделив ключевые моменты, советы и договоренности. Обратите особое внимание на высказывания эксперта и их значимость для решения текущих задач. Ваша цель — предоставить четкий обзор обсужденных вопросов и предложенных решений. Никогда ничего не придумывайте, опирайтесь только на факты из текста. Если запись встречи не содержит консультацию эксперта, неинформативна или непонятна в ответе стоит именно так и сказать.',
        'user_prompt': 'Another user prompt example',
        'user_prompt_for_chunks': 'Another chunked prompt example',
        'created_at': datetime.utcnow()
    },
    {
        'assistant': 'lecture',
        'name': 'Содержание лекции',
        'assistant_prompt': 'Ваша задача — проанализировать видеозапись лекции и составить краткое содержание, выделить основные тезисы и сформулировать домашнее задание на основе материала лекции и предложить названия книг в качестве дополнительных материалов, которые будут полезны для выполнения задания. Убедитесь, что ваш анализ и краткое содержание лекции, а также формулирование домашнего задания и ссылки на дополнительную существующую (не придуманную) литературу ясно и последовательно отражают основные аспекты преподаваемого материала.',
        'user_prompt': 'Another user prompt example',
        'user_prompt_for_chunks': 'Another chunked prompt example',
        'created_at': datetime.utcnow()
    }

]


async def insert_data(engine):
    async_session = sessionmaker(
        bind=engine,
        class_=AsyncSession,
        expire_on_commit=False

    )
    async with async_session() as session:
        async with session.begin():
            for entry in data:
                assistant = AIAssistant(**entry)
                session.add(assistant)
            await session.commit()


async def main():
    # Используем асинхронный драйвер asyncpg
    engine = create_async_engine(DATABASE_URL, echo=True)
    # Создаем все таблицы (если они еще не созданы)
    async with engine.begin() as conn:
        await conn.run_sync(ModelBase.metadata.create_all)
    await insert_data(engine)

if __name__ == "__main__":
    asyncio.run(main())
